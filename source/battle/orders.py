from source.header_operations import *
from source.header_common import *

from source.header_triggers import *
from source.header_presentations import *
from source.header_mission_templates import *

from source.module_constants import *

from source.statement import StatementBlock

_group_selected_alpha = 0x44

_has_troops = "$group%d_has_troops"
_selected = "$g_formation_group%d_selected"
_check = "$g_presentation_obj_battle_check%d"
_button = "$g_presentation_obj_battle_but%d"
_name = "$g_presentation_obj_battle_name%d"
_movement = "$g_presentation_but%d_movement"
_riding = "$g_presentation_but%d_riding"
_weapon = "$g_presentation_but%d_weapon_usage"


def create_group_rows():
    block = [
        (assign, ":stat_position_y", 653),
        (assign, ":stat_position_check_y", 662),
        (assign, ":stat_position_name_y", 660),
    ]

    for group in range(8 + 1):
        block += [
            (try_begin),
                (eq, _has_troops % group, 1),

                # create the button
                (create_image_button_overlay, _button % group, "mesh_white_plane", "mesh_white_plane"),
                (position_set_x, pos1, 0),
                (position_set_y, pos1, ":stat_position_y"),
                (overlay_set_position, _button % group, pos1),
                (val_add, ":stat_position_y", -40),

                (position_set_x, pos1, 32500),
                (position_set_y, pos1, 2000),
                (overlay_set_size, _button % group, pos1),
                (overlay_set_alpha, _button % group, 0),
                (overlay_set_color, _button % group, 0xFFFF00),

                # create check box to select/un-select group
                (create_check_box_overlay, _check % group, "mesh_checkbox_off", "mesh_checkbox_on"),
                (position_set_x, pos2, 20),
                (position_set_y, pos2, ":stat_position_check_y"),
                (overlay_set_position, _check % group, pos2),
                (val_add, ":stat_position_check_y", -40),

                # create the name on top of button
                (create_text_overlay, _name % group, s7, 0),
                (position_set_x, pos3, 50),
                (position_set_y, pos3, ":stat_position_name_y"),
                (overlay_set_position, _name % group, pos3),

                # create the texts with current state of group
                (create_text_overlay, _movement % group, s7, tf_center_justify),
                (create_text_overlay, _riding % group, s7, tf_center_justify),
                (create_text_overlay, _weapon % group, s7, tf_center_justify),

                (position_set_y, pos1, ":stat_position_name_y"),
                (position_set_x, pos1, 270),
                (overlay_set_position, _movement % group, pos1),
                (position_set_x, pos1, 410),
                (overlay_set_position, _riding % group, pos1),
                (position_set_x, pos1, 550),
                (overlay_set_position, _weapon % group, pos1),

                (val_add, ":stat_position_name_y", -40),
            (try_end),
        ]
    return StatementBlock(*block)


def press_group_button(group):
    """
    Selects the group and un-selects all others
    """
    block = [
        # press if this button was selected
        (eq, _has_troops % group, 1),
        (eq, ":object", _button % group),
        # select group
        (assign, _selected % group, 1),
        (overlay_set_val, _check % group, 1),
        # add color
        (overlay_animate_to_alpha, _button % group, 250, _group_selected_alpha),
        # update listeners of orders
        (assign, ":update_listeners", 1),
    ]

    # un-select all others
    for other_group in range(8 + 1):
        if other_group == group:
            continue

        block += [
            (try_begin),
                (eq, _has_troops % other_group, 1),
                # un-select it
                (assign, _selected % other_group, 0),
                (overlay_set_val, _check % other_group, 0),
                # remove color
                (overlay_animate_to_alpha, _button % other_group, 250, 0),
            (try_end),
        ]
    return StatementBlock(*block)


def press_check_button(group):
    return StatementBlock(
        (eq, _has_troops % group, 1),
        (eq, ":object", _check % group),
        (assign, _selected % group, ":value"),
        (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, _button % group, 250, _group_selected_alpha),
        (else_try),
            (overlay_animate_to_alpha, _button % group, 250, 0),
        (try_end),
        # listeners need to receive order
        (assign, ":update_listeners", 1),
    )


def mouse_hover_group_buttons():
    block = [(try_begin)]
    for group in range(8 + 1):
        block += [
            (eq, ":object", _button % group),
            (try_begin),
                (eq, ":enter_leave", 0),
                (overlay_animate_to_color, _name % group, 250, 0xFFFFFF),
                (overlay_animate_to_color, _movement % group, 250, 0xFFFFFF),
                (overlay_animate_to_color, _riding % group, 250, 0xFFFFFF),
                (overlay_animate_to_color, _weapon % group, 250, 0xFFFFFF),
            (else_try),
                (overlay_animate_to_color, _name % group, 250, 0),
                (overlay_animate_to_color, _movement % group, 250, 0),
                (overlay_animate_to_color, _riding % group, 250, 0),
                (overlay_animate_to_color, _weapon % group, 250, 0),
            (try_end),
        ]
        if group != 8:
            block += [(else_try)]
        else:
            block += [(try_end)]

    return StatementBlock(*block)


def send_map_orders():
    block = []

    for group in range(8 + 1):
        block += [
            (try_begin),
                (eq, _selected % group, 1),
                (team_give_order, ":player_team", group, mordr_hold),
                (team_set_order_position, ":player_team", group, pos3),
            (try_end)
        ]
    return StatementBlock(*block)


def update_order_panel():
    block = []
    for group in range(8 + 1):
        block += [
            (try_begin),
                (eq, _has_troops % group, 1),

                (call_script, "script_store_movement_order_name_to_s1", ":team_no", group),
                (overlay_set_text, _movement % group, s1),

                (call_script, "script_store_riding_order_name_to_s1", ":team_no", group),
                (overlay_set_text, _riding % group, s1),

                (call_script, "script_store_weapon_usage_order_name_to_s1", ":team_no", group),
                (overlay_set_text, _weapon % group, s1),
            (try_end),
        ]

    return StatementBlock(*block)


def update_order_panel_checked_classes():
    block = [
        (get_player_agent_no, ":player_agent"),
        (agent_get_team, ":player_team", ":player_agent")
    ]

    for group in range(8 + 1):
        block += [
            (try_begin),
                (eq, _has_troops % group, 1),
                (class_is_listening_order, ":player_team", group),

                (overlay_set_val, _check % group, 1),
                (assign, _selected % group, 1),
                (overlay_animate_to_alpha, _button % group, 250, _group_selected_alpha),
            (else_try),
                (eq, _has_troops % group, 1),

                (overlay_set_val, _check % group, 0),
                (assign, _selected % group, 0),
                (overlay_animate_to_alpha, _button % group, 250, 0),
            (try_end),
        ]
    return StatementBlock(*block)


def give_orders():
    block = [
        (agent_get_team, ":team_no", ":leader_agent_no"),
        (agent_get_position, pos1, ":leader_agent_no")
    ]

    for group in range(8 + 1):
        block += [
            (try_begin),
                # give order if selected
                (eq, _selected % group, 1),
                (team_give_order, ":team_no", group, ":order"),

                # if order hold, set order position to leader's position
                (eq, ":order", mordr_hold),
                (team_set_order_position, ":team_no", group, pos1),
            (try_end),
        ]
    return StatementBlock(*block)


presentations = [
    ("battle", 0, 0, [
        (ti_on_presentation_load, [
            (try_begin),
                (ge, "$cheat_mode", 1),
                    (display_message, "@{!}DEBUG  battle.orders.presentations40916",0xFF0000),
            (try_end),
            (set_fixed_point_multiplier, 1000),
            (assign, "$g_formation_group0_selected", 0),
            (assign, "$g_formation_group1_selected", 0),
            (assign, "$g_formation_group2_selected", 0),
            (assign, "$g_formation_group3_selected", 0),
            (assign, "$g_formation_group4_selected", 0),
            (assign, "$g_formation_group5_selected", 0),
            (assign, "$g_formation_group6_selected", 0),
            (assign, "$g_formation_group7_selected", 0),
            (assign, "$g_formation_group8_selected", 0),
            (assign, "$g_presentation_obj_battle_but0", -1),
            (assign, "$g_presentation_obj_battle_but1", -1),
            (assign, "$g_presentation_obj_battle_but2", -1),
            (assign, "$g_presentation_obj_battle_but3", -1),
            (assign, "$g_presentation_obj_battle_but4", -1),
            (assign, "$g_presentation_obj_battle_but5", -1),
            (assign, "$g_presentation_obj_battle_but6", -1),
            (assign, "$g_presentation_obj_battle_but7", -1),
            (assign, "$g_presentation_obj_battle_but8", -1),
            (str_clear, s7),

            (try_for_agents, ":agent_no"),
                (agent_set_slot, ":agent_no", "slot_agent_map_overlay_id", 0),
            (try_end),

            (get_player_agent_no, ":player_agent"),
            (agent_get_troop_id, ":player_troop_id", ":player_agent"),

            (position_set_y, pos1, 700),
            (create_text_overlay, reg1, "@Action", tf_center_justify|tf_single_line|tf_with_outline),
            (overlay_set_color, reg1, 0xFFAAAAAA),
            (position_set_x, pos1, 270),
            (overlay_set_position, reg1, pos1),
            (create_text_overlay, reg1, "@Mount", tf_center_justify|tf_single_line|tf_with_outline),
            (overlay_set_color, reg1, 0xFFAAAAAA),
            (position_set_x, pos1, 410),
            (overlay_set_position, reg1, pos1),
            (create_text_overlay, reg1, "@Attack Type", tf_center_justify|tf_single_line|tf_with_outline),
            (overlay_set_color, reg1, 0xFFAAAAAA),
            (position_set_x, pos1, 550),
            (overlay_set_position, reg1, pos1),

            (assign, "$group0_has_troops", 0),
            (assign, "$group1_has_troops", 0),
            (assign, "$group2_has_troops", 0),
            (assign, "$group3_has_troops", 0),
            (assign, "$group4_has_troops", 0),
            (assign, "$group5_has_troops", 0),
            (assign, "$group6_has_troops", 0),
            (assign, "$group7_has_troops", 0),
            (assign, "$group8_has_troops", 0),
            (party_get_num_companion_stacks, ":num_stacks", "p_main_party"),

            # $num_classes is the number of different classes (of troops) in the party
            (assign, "$num_classes", 0),
            (try_for_range, ":troop_iterator", 0, ":num_stacks"),
                (party_stack_get_troop_id, ":cur_troop_id", "p_main_party", ":troop_iterator"),
                (troop_get_class, ":troop_class", ":cur_troop_id"),
                (neq, ":player_troop_id", ":cur_troop_id"),
                (try_begin),
                    (eq, ":troop_class", 0),
                    (try_begin),
                        (neq, "$group0_has_troops", 1),
                        (val_add, "$num_classes", 1),
                    (try_end),
                    (assign, "$group0_has_troops", 1),
                (else_try),
                    (eq, ":troop_class", 1),
                    (try_begin),
                        (neq, "$group1_has_troops", 1),
                        (val_add, "$num_classes", 1),
                    (try_end),
                    (assign, "$group1_has_troops", 1),
                (else_try),
                    (eq, ":troop_class", 2),
                    (try_begin),
                        (neq, "$group2_has_troops", 1),
                        (val_add, "$num_classes", 1),
                    (try_end),
                    (assign, "$group2_has_troops", 1),
                (else_try),
                    (eq, ":troop_class", 3),
                    (try_begin),
                        (neq, "$group3_has_troops", 1),
                        (val_add, "$num_classes", 1),
                    (try_end),
                    (assign, "$group3_has_troops", 1),
                (else_try),
                    (eq, ":troop_class", 4),
                    (try_begin),
                        (neq, "$group4_has_troops", 1),
                        (val_add, "$num_classes", 1),
                    (try_end),
                    (assign, "$group4_has_troops", 1),
                (else_try),
                    (eq, ":troop_class", 5),
                    (try_begin),
                        (neq, "$group5_has_troops", 1),
                        (val_add, "$num_classes", 1),
                    (try_end),
                    (assign, "$group5_has_troops", 1),
                (else_try),
                    (eq, ":troop_class", 6),
                    (try_begin),
                        (neq, "$group6_has_troops", 1),
                        (val_add, "$num_classes", 1),
                    (try_end),
                    (assign, "$group6_has_troops", 1),
                (else_try),
                    (eq, ":troop_class", 7),
                    (try_begin),
                        (neq, "$group7_has_troops", 1),
                        (val_add, "$num_classes", 1),
                    (try_end),
                    (assign, "$group7_has_troops", 1),
                (else_try),
                    (eq, ":troop_class", 8),
                    (try_begin),
                        (neq, "$group8_has_troops", 1),
                        (val_add, "$num_classes", 1),
                    (try_end),
                    (assign, "$group8_has_troops", 1),
                (try_end),
            (try_end),

            create_group_rows(),

            (get_player_agent_no, ":player_agent"),
            (agent_get_team, ":player_team", ":player_agent"),

            (call_script, "script_update_order_panel", ":player_team"),

            # four buttons
            (create_button_overlay, "$g_presentation_obj_battle_14", "@Spread Out", tf_center_justify|tf_single_line|tf_with_outline),
            (overlay_set_color, "$g_presentation_obj_battle_14", 0xFFFFFFFF),
            (create_button_overlay, "$g_presentation_obj_battle_15", "@Stand Closer", tf_center_justify|tf_single_line|tf_with_outline),
            (overlay_set_color, "$g_presentation_obj_battle_15", 0xFFFFFFFF),
            (create_button_overlay, "$g_presentation_obj_battle_16", "@Fall Back", tf_center_justify|tf_single_line|tf_with_outline),
            (overlay_set_color, "$g_presentation_obj_battle_16", 0xFFFFFFFF),
            (create_button_overlay, "$g_presentation_obj_battle_17", "@Advance", tf_center_justify|tf_single_line|tf_with_outline),
            (overlay_set_color, "$g_presentation_obj_battle_17", 0xFFFFFFFF),

            # list of movement
            (create_listbox_overlay, "$g_presentation_obj_battle_10", "str_space", 0),
            (overlay_set_color, "$g_presentation_obj_battle_10", 0xFFFFFFFF),

            (overlay_add_item, "$g_presentation_obj_battle_10", "@Stand Ground"),
            (overlay_add_item, "$g_presentation_obj_battle_10", "@Charge"),
            (overlay_add_item, "$g_presentation_obj_battle_10", "@Follow Me"),
            (overlay_add_item, "$g_presentation_obj_battle_10", "@Hold This Position"),

            (position_set_x, pos1, 600),
            (position_set_y, pos1, 600),
            (overlay_set_size, "$g_presentation_obj_battle_10", pos1),

            # set positions of order buttons
            (assign, ":y_position_for_order_buttons", 640),
            (assign, ":addition_y_position", "$num_classes"),
            (val_mul, ":addition_y_position", -40),
            (val_add, ":y_position_for_order_buttons", ":addition_y_position"),

            (val_add, ":y_position_for_order_buttons", -35),
            (position_set_x, pos1, 205),
            (position_set_y, pos1, ":y_position_for_order_buttons"),
            (val_add, ":y_position_for_order_buttons", 35),
            (overlay_set_position, "$g_presentation_obj_battle_10", pos1),
            (overlay_set_alpha, "$g_presentation_obj_battle_10", 0x60),
            (overlay_set_val, "$g_presentation_obj_battle_10", "$g_latest_order_1"),

            (val_add, ":y_position_for_order_buttons", -40),
            (position_set_x, pos1, 130),
            (position_set_y, pos1, ":y_position_for_order_buttons"),
            (val_add, ":y_position_for_order_buttons", 40),
            (overlay_set_position, "$g_presentation_obj_battle_14", pos1),

            (val_add, ":y_position_for_order_buttons", -20),
            (position_set_x, pos1, 130),
            (position_set_y, pos1, ":y_position_for_order_buttons"),
            (val_add, ":y_position_for_order_buttons", 20),
            (overlay_set_position, "$g_presentation_obj_battle_15", pos1),

            (val_add, ":y_position_for_order_buttons", -0),
            (position_set_x, pos1, 130),
            (position_set_y, pos1, ":y_position_for_order_buttons"),
            (val_add, ":y_position_for_order_buttons", 0),
            (overlay_set_position, "$g_presentation_obj_battle_16", pos1),

            (val_add, ":y_position_for_order_buttons", 20),
            (position_set_x, pos1, 130),
            (position_set_y, pos1, ":y_position_for_order_buttons"),
            (val_add, ":y_position_for_order_buttons", -20),
            (overlay_set_position, "$g_presentation_obj_battle_17", pos1),

            # list of mount/dismount
            (create_listbox_overlay, "$g_presentation_obj_battle_11", "str_space", 0),

            (overlay_add_item, "$g_presentation_obj_battle_11", "@Dismount"),
            (overlay_add_item, "$g_presentation_obj_battle_11", "@Mount"),

            (position_set_x, pos1, 600),
            (position_set_y, pos1, 600),
            (overlay_set_size, "$g_presentation_obj_battle_11", pos1),

            (position_set_x, pos1, 350),
            (position_set_y, pos1, ":y_position_for_order_buttons"),
            (overlay_set_position, "$g_presentation_obj_battle_11", pos1),

            (overlay_set_alpha, "$g_presentation_obj_battle_11", 0x60),
            (overlay_set_val, "$g_presentation_obj_battle_11", "$g_latest_order_2"),

            # menu of firing orders
            (create_listbox_overlay, "$g_presentation_obj_battle_12", "str_space", 0),

            (overlay_add_item, "$g_presentation_obj_battle_12", "@Fire At Will"),
            (overlay_add_item, "$g_presentation_obj_battle_12", "@Hold Your Fire"),

            (position_set_x, pos1, 600),
            (position_set_y, pos1, 600),
            (overlay_set_size, "$g_presentation_obj_battle_12", pos1),

            (position_set_x, pos1, 495),
            (position_set_y, pos1, ":y_position_for_order_buttons"),
            (overlay_set_position, "$g_presentation_obj_battle_12", pos1),

            (overlay_set_alpha, "$g_presentation_obj_battle_12", 0x60),
            (overlay_set_val, "$g_presentation_obj_battle_12", "$g_latest_order_3"),

            # menu of weapon type
            (create_listbox_overlay, "$g_presentation_obj_battle_13", "str_space", 0),

            (overlay_add_item, "$g_presentation_obj_battle_13", "@Use Blunt Weapons"),
            (overlay_add_item, "$g_presentation_obj_battle_13", "@Use Any Weapon"),

            (position_set_x, pos1, 600),
            (position_set_y, pos1, 600),
            (overlay_set_size, "$g_presentation_obj_battle_13", pos1),

            (val_add, ":y_position_for_order_buttons", -35),
            (position_set_x, pos1, 495),
            (position_set_y, pos1, ":y_position_for_order_buttons"),
            (val_add, ":y_position_for_order_buttons", 35),
            (overlay_set_position, "$g_presentation_obj_battle_13", pos1),

            (overlay_set_alpha, "$g_presentation_obj_battle_13", 0x60),
            (overlay_set_val, "$g_presentation_obj_battle_13", "$g_latest_order_4"),

            # menu with statistics
            (create_text_overlay, "$g_presentation_obj_battle_22", "str_us_", 0),
            (create_text_overlay, "$g_presentation_obj_battle_23", "str_allies_", 0),
            (create_text_overlay, "$g_presentation_obj_battle_24", "str_enemies_", 0),
            (create_text_overlay, "$g_presentation_obj_battle_25", "@Ready", tf_center_justify),
            (create_text_overlay, "$g_presentation_obj_battle_26", "@Wounded", tf_center_justify),
            (create_text_overlay, "$g_presentation_obj_battle_28", "@Routed", tf_center_justify),
            (create_text_overlay, "$g_presentation_obj_battle_27", "@Dead", tf_center_justify),

            (create_text_overlay, "$g_battle_us_ready", s7, tf_center_justify),
            (create_text_overlay, "$g_battle_us_wounded", s7, tf_center_justify),
            (create_text_overlay, "$g_battle_us_routed", s7, tf_center_justify),
            (create_text_overlay, "$g_battle_us_dead", s7, tf_center_justify),

            (create_text_overlay, "$g_battle_enemies_ready", s7, tf_center_justify),
            (create_text_overlay, "$g_battle_enemies_wounded", s7, tf_center_justify),
            (create_text_overlay, "$g_battle_enemies_routed", s7, tf_center_justify),
            (create_text_overlay, "$g_battle_enemies_dead", s7, tf_center_justify),

            (create_text_overlay, "$g_battle_allies_ready", s7, tf_center_justify),
            (create_text_overlay, "$g_battle_allies_wounded", s7, tf_center_justify),
            (create_text_overlay, "$g_battle_allies_routed", s7, tf_center_justify),
            (create_text_overlay, "$g_battle_allies_dead", s7, tf_center_justify),

            (create_image_button_overlay, "$g_battle_report_plane", "mesh_white_plane", "mesh_white_plane"),
            (overlay_set_color, "$g_battle_report_plane", 0),
            (position_set_x, pos1, 15500),
            (position_set_y, pos1, 6000),
            (overlay_set_size, "$g_battle_report_plane", pos1),
            (position_set_x, pos1, 672),
            (position_set_y, pos1, 275),
            (overlay_set_position, "$g_battle_report_plane", pos1),
            (overlay_set_alpha, "$g_battle_report_plane", 0x44),
            (overlay_set_color, "$g_battle_report_plane", 0x1166BB),


            (position_set_x, pos1, 750),
            (position_set_y, pos1, 750),

            (overlay_set_size, "$g_presentation_obj_battle_14", pos1),
            (overlay_set_size, "$g_presentation_obj_battle_15", pos1),
            (overlay_set_size, "$g_presentation_obj_battle_16", pos1),
            (overlay_set_size, "$g_presentation_obj_battle_17", pos1),

            (overlay_set_size, "$g_presentation_obj_battle_22", pos1),
            (overlay_set_size, "$g_presentation_obj_battle_23", pos1),
            (overlay_set_size, "$g_presentation_obj_battle_24", pos1),
            (overlay_set_size, "$g_presentation_obj_battle_25", pos1),
            (overlay_set_size, "$g_presentation_obj_battle_26", pos1),
            (overlay_set_size, "$g_presentation_obj_battle_27", pos1),
            (overlay_set_size, "$g_presentation_obj_battle_28", pos1),
            (overlay_set_size, "$g_battle_us_ready", pos1),
            (overlay_set_size, "$g_battle_us_wounded", pos1),
            (overlay_set_size, "$g_battle_us_routed", pos1),
            (overlay_set_size, "$g_battle_us_dead", pos1),
            (overlay_set_size, "$g_battle_enemies_ready", pos1),
            (overlay_set_size, "$g_battle_enemies_wounded", pos1),
            (overlay_set_size, "$g_battle_enemies_routed", pos1),
            (overlay_set_size, "$g_battle_enemies_dead", pos1),
            (overlay_set_size, "$g_battle_allies_ready", pos1),
            (overlay_set_size, "$g_battle_allies_wounded", pos1),
            (overlay_set_size, "$g_battle_allies_routed", pos1),
            (overlay_set_size, "$g_battle_allies_dead", pos1),

            (assign, ":stat_position_x", 675),
            (assign, ":stat_position_y", 280),

            (val_add, ":stat_position_x", 70),
            (val_add, ":stat_position_y", 90),
            (position_set_x, pos1, ":stat_position_x"),
            (position_set_y, pos1, ":stat_position_y"),
            (overlay_set_position, "$g_presentation_obj_battle_25", pos1),
            (val_add, ":stat_position_x", 70),
            (position_set_x, pos1, ":stat_position_x"),
            (overlay_set_position, "$g_presentation_obj_battle_26", pos1),
            (val_add, ":stat_position_x", 70),
            (position_set_x, pos1, ":stat_position_x"),
            (overlay_set_position, "$g_presentation_obj_battle_28", pos1),
            (val_add, ":stat_position_x", 70),
            (position_set_x, pos1, ":stat_position_x"),
            (overlay_set_position, "$g_presentation_obj_battle_27", pos1),

            (val_add, ":stat_position_x", -280),
            (val_add, ":stat_position_y", -30),
            (position_set_x, pos1, ":stat_position_x"),
            (position_set_y, pos1, ":stat_position_y"),
            (overlay_set_position, "$g_presentation_obj_battle_22", pos1),
            (val_add, ":stat_position_y", -30),
            (position_set_y, pos1, ":stat_position_y"),
            (overlay_set_position, "$g_presentation_obj_battle_23", pos1),
            (val_add, ":stat_position_y", -30),
            (position_set_y, pos1, ":stat_position_y"),
            (overlay_set_position, "$g_presentation_obj_battle_24", pos1),

            (get_scene_boundaries, pos2, pos3),
            (position_transform_position_to_local, pos4, pos2, pos3),
            (set_fixed_point_multiplier, 1000),
            (position_get_x, ":map_width", pos4),
            (position_get_y, ":map_height", pos4),
            (set_fixed_point_multiplier, 1000),
            (store_div, ":map_ratio", ":map_height", 100),
            (store_div, ":map_ratio", ":map_width", ":map_ratio"),
            (try_begin),
              (gt, ":map_ratio", 100),
              (assign, "$g_battle_map_width", 300),
              (store_div, "$g_battle_map_scale", ":map_width", "$g_battle_map_width"),
              (store_div, "$g_battle_map_height", ":map_height", "$g_battle_map_scale"),
            (else_try),
              (assign, "$g_battle_map_height", 300),
              (store_div, "$g_battle_map_scale", ":map_height", "$g_battle_map_height"),
              (store_div, "$g_battle_map_width", ":map_width", "$g_battle_map_scale"),
            (try_end),

            (create_image_button_overlay, "$g_battle_map_plane", "mesh_white_plane", "mesh_white_plane"),
            (overlay_set_color, "$g_battle_map_plane", 0),
            (store_add, ":map_bordered_width", "$g_battle_map_width", 20),
            (store_add, ":map_bordered_height", "$g_battle_map_height", 20),
            (store_mul, ":map_scale_x", ":map_bordered_width", 50),
            (store_mul, ":map_scale_y", ":map_bordered_height", 50),
            (position_set_x, pos1, ":map_scale_x"),
            (position_set_y, pos1, ":map_scale_y"),
            (overlay_set_size, "$g_battle_map_plane", pos1),
            (store_sub, ":map_pos_x", 990, ":map_bordered_width"),
            (store_sub, ":map_pos_y", 740, ":map_bordered_height"),
            (position_set_x, pos1, ":map_pos_x"),
            (position_set_y, pos1, ":map_pos_y"),
            (overlay_set_position, "$g_battle_map_plane", pos1),
            (overlay_set_alpha, "$g_battle_map_plane", 0x44),

            (create_mesh_overlay, "$g_battle_map_infantry_order_flag", "mesh_flag_infantry"),
            (create_mesh_overlay, "$g_battle_map_archers_order_flag", "mesh_flag_archers"),
            (create_mesh_overlay, "$g_battle_map_cavalry_order_flag", "mesh_flag_cavalry"),
            (overlay_set_alpha, "$g_battle_map_infantry_order_flag", 0),
            (overlay_set_alpha, "$g_battle_map_archers_order_flag", 0),
            (overlay_set_alpha, "$g_battle_map_cavalry_order_flag", 0),

            (call_script, "script_update_order_panel_checked_classes"),
            (call_script, "script_update_order_panel_statistics_and_map"),

            (presentation_set_duration, 999999),
        ]),

        (ti_on_presentation_event_state_change, [
            (store_trigger_param_1, ":object"),
            (store_trigger_param_2, ":value"),
            (get_player_agent_no, ":player_agent"),
            (agent_get_team, ":player_team", ":player_agent"),

            (assign, ":update_listeners", 0),
            # press any of the group check buttons
            (try_begin),
                press_check_button(0),
            (else_try),
                press_check_button(1),
            (else_try),
                press_check_button(2),
            (else_try),
                press_check_button(3),
            (else_try),
                press_check_button(4),
            (else_try),
                press_check_button(5),
            (else_try),
                press_check_button(6),
            (else_try),
                press_check_button(7),
            (else_try),
                press_check_button(8),
            # press any of the groups
            (else_try),
                press_group_button(0),
            (else_try),
                press_group_button(1),
            (else_try),
                press_group_button(2),
            (else_try),
                press_group_button(3),
            (else_try),
                press_group_button(4),
            (else_try),
                press_group_button(5),
            (else_try),
                press_group_button(6),
            (else_try),
                press_group_button(7),
            (else_try),
                press_group_button(8),
            (else_try),
                (eq, ":object", "$g_presentation_obj_battle_14"),
                (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_spread_out),
            (else_try),
                (eq, ":object", "$g_presentation_obj_battle_15"),
                (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_stand_closer),
            (else_try),
                (eq, ":object", "$g_presentation_obj_battle_16"),
                (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_fall_back),
            (else_try),
                (eq, ":object", "$g_presentation_obj_battle_17"),
                (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_advance),
            (else_try),
                (eq, ":object", "$g_presentation_obj_battle_10"),
                (try_begin),
                    (eq, ":value", 3),
                    (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_hold),
                    (call_script, "script_update_order_panel", ":player_team"),
                    (assign, "$g_latest_order_1", 3),
                (else_try),
                    (eq, ":value", 2),
                    (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_follow),
                    (call_script, "script_update_order_panel", ":player_team"),
                    (assign, "$g_latest_order_1", 2),
                (else_try),
                    (eq, ":value", 1),
                    (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_charge),
                    (call_script, "script_update_order_panel", ":player_team"),
                    (assign, "$g_latest_order_1", 1),
                (else_try),
                    (eq, ":value", 0),
                    (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_stand_ground),
                    (call_script, "script_update_order_panel", ":player_team"),
                    (assign, "$g_latest_order_1", 0),
                (try_end),
            (else_try),
                (eq, ":object", "$g_presentation_obj_battle_11"),
                (try_begin),
                    (eq, ":value", 1),
                    (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_mount),
                    (call_script, "script_update_order_panel", ":player_team"),
                    (assign, "$g_latest_order_2", 1),
                (else_try),
                    (eq, ":value", 0),
                    (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_dismount),
                    (call_script, "script_update_order_panel", ":player_team"),
                    (assign, "$g_latest_order_2", 0),
                (try_end),
            (else_try),
                (eq, ":object", "$g_presentation_obj_battle_12"),
                (try_begin),
                    (eq, ":value", 1),
                    (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_hold_fire),
                    (call_script, "script_update_order_panel", ":player_team"),
                    (assign, "$g_latest_order_3", 1),
                (else_try),
                    (eq, ":value", 0),
                    (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_fire_at_will),
                    (call_script, "script_update_order_panel", ":player_team"),
                    (assign, "$g_latest_order_3", 0),
                (try_end),
            (else_try),
                (eq, ":object", "$g_presentation_obj_battle_13"),
                (try_begin),
                    (eq, ":value", 1),
                    (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_use_any_weapon),
                    (call_script, "script_update_order_panel", ":player_team"),
                    (assign, "$g_latest_order_4", 1),
                (else_try),
                    (eq, ":value", 0),
                    (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_use_blunt_weapons),
                    (call_script, "script_update_order_panel", ":player_team"),
                    (assign, "$g_latest_order_4", 0),
                (try_end),
            (else_try),
                (eq, ":object", "$g_battle_map_plane"),
                (get_scene_boundaries, pos2, pos3),
                (mouse_get_position, pos1),
                (set_fixed_point_multiplier, 1000),
                (position_get_x, ":mouse_x", pos1),
                (position_get_y, ":mouse_y", pos1),
                (store_sub, ":map_x", 980, "$g_battle_map_width"),
                (store_sub, ":map_y", 730, "$g_battle_map_height"),
                (val_sub, ":mouse_x", ":map_x"),
                (val_sub, ":mouse_y", ":map_y"),
                (val_clamp, ":mouse_x", 0, "$g_battle_map_width"),
                (val_clamp, ":mouse_y", 0, "$g_battle_map_height"),
                (val_mul, ":mouse_x", "$g_battle_map_scale"),
                (val_mul, ":mouse_y", "$g_battle_map_scale"),
                (set_fixed_point_multiplier, 1000),
                (position_set_x, pos1, ":mouse_x"),
                (position_set_y, pos1, ":mouse_y"),
                (position_transform_position_to_parent, pos3, pos2, pos1),

                send_map_orders(),

                # formations by motomataru
                (assign, ":fixed_point_multiplier", 1),
                (convert_to_fixed_point, ":fixed_point_multiplier"),
                (set_fixed_point_multiplier, 100),
                (call_script, "script_team_get_position_of_enemies", Enemy_Team_Pos, "$fplayer_team_no", grc_everyone),

                (try_for_range, ":division", 0, 9),
                    (assign, ":do_it", 0),
                    (try_begin),
                        (eq, ":division", 0),
                        (eq, "$g_formation_group0_selected", 1),
                        (assign, ":do_it", 1),
                    (else_try),
                        (eq, ":division", 1),
                        (eq, "$g_formation_group1_selected", 1),
                        (assign, ":do_it", 1),
                    (else_try),
                        (eq, ":division", 2),
                        (eq, "$g_formation_group2_selected", 1),
                        (assign, ":do_it", 1),
                    (else_try),
                        (eq, ":division", 3),
                        (eq, "$g_formation_group3_selected", 1),
                        (assign, ":do_it", 1),
                    (else_try),
                        (eq, ":division", 4),
                        (eq, "$g_formation_group4_selected", 1),
                        (assign, ":do_it", 1),
                    (else_try),
                        (eq, ":division", 5),
                        (eq, "$g_formation_group5_selected", 1),
                        (assign, ":do_it", 1),
                    (else_try),
                        (eq, ":division", 6),
                        (eq, "$g_formation_group6_selected", 1),
                        (assign, ":do_it", 1),
                    (else_try),
                        (eq, ":division", 7),
                        (eq, "$g_formation_group7_selected", 1),
                        (assign, ":do_it", 1),
                    (else_try),
                        (eq, ":division", 8),
                        (eq, "$g_formation_group8_selected", 1),
                        (assign, ":do_it", 1),
                    (try_end),
                    (eq, ":do_it", 1),

                    (store_add, ":slot", "slot_team_d0_formation", ":division"),
                    (team_get_slot, ":formation", "$fplayer_team_no", ":slot"),
                    (neq, ":formation", formation_none),
                    (copy_position, pos1, pos3),
                    (call_script, "script_point_y_toward_position", pos1, Enemy_Team_Pos),
                    (call_script, "script_set_formation_destination", "$fplayer_team_no", ":division", pos1),

                    (store_add, ":slot", "slot_team_d0_size", ":division"),
                    (team_get_slot, ":troop_count", "$fplayer_team_no", ":slot"),

                    (store_add, ":slot", "slot_team_d0_formation_space", ":division"),
                    (team_get_slot, ":spacing", "$fplayer_team_no", ":slot"),

                    (store_add, ":slot", "slot_team_d0_type", ":division"),
                    (try_begin),
                        (team_slot_eq, "$fplayer_team_no", ":slot", sdt_archer),
                        (call_script, "script_get_centering_amount", formation_default, ":troop_count", ":spacing"),
                        (val_mul, reg0, -1),
                        (position_move_x, pos1, reg0),
                        (call_script, "script_form_archers", "$fplayer_team_no", ":division", "$fplayer_agent_no", ":spacing", 0, ":formation"),
                    (else_try),
                        (this_or_next|team_slot_eq, "$fplayer_team_no", ":slot", sdt_cavalry),
                        (team_slot_eq, "$fplayer_team_no", ":slot", sdt_harcher),
                        (call_script, "script_form_cavalry", "$fplayer_team_no", ":division", "$fplayer_agent_no", ":spacing", 0),
                    (else_try),
                        (call_script, "script_get_centering_amount", ":formation", ":troop_count", ":spacing"),
                        (position_move_x, pos1, reg0),
                        (call_script, "script_form_infantry", "$fplayer_team_no", ":division", "$fplayer_agent_no", ":spacing", 0, ":formation"),
                    (try_end),

                    (store_add, ":slot", "slot_team_d0_move_order", ":division"),
                    (team_set_slot, "$fplayer_team_no", ":slot", mordr_hold),
                (try_end),

                (set_fixed_point_multiplier, ":fixed_point_multiplier"),
                # end formations

                (call_script, "script_update_order_flags_on_map"),
                (call_script, "script_update_order_panel", ":player_team"),
            (try_end),

            (try_begin),
                (eq, ":update_listeners", 1),
                (team_set_order_listener, ":player_team", -1),
                (try_begin),
                    (this_or_next|eq, "$g_formation_group0_selected", 1),
                    (eq, "$group0_has_troops", 0),
                    (this_or_next|eq, "$g_formation_group1_selected", 1),
                    (eq, "$group1_has_troops", 0),
                    (this_or_next|eq, "$g_formation_group2_selected", 1),
                    (eq, "$group2_has_troops", 0),
                    (this_or_next|eq, "$g_formation_group3_selected", 1),
                    (eq, "$group3_has_troops", 0),
                    (this_or_next|eq, "$g_formation_group4_selected", 1),
                    (eq, "$group4_has_troops", 0),
                    (this_or_next|eq, "$g_formation_group5_selected", 1),
                    (eq, "$group5_has_troops", 0),
                    (this_or_next|eq, "$g_formation_group6_selected", 1),
                    (eq, "$group6_has_troops", 0),
                    (this_or_next|eq, "$g_formation_group7_selected", 1),
                    (eq, "$group7_has_troops", 0),
                    (this_or_next|eq, "$g_formation_group8_selected", 1),
                    (eq, "$group8_has_troops", 0),
                    (team_set_order_listener, ":player_team", grc_everyone),
                (else_try),
                    (eq, "$g_formation_group0_selected", 1),
                    (team_set_order_listener, ":player_team", 0, 1),
                (else_try),
                    (eq, "$g_formation_group1_selected", 1),
                    (team_set_order_listener, ":player_team", 1, 1),
                (else_try),
                    (eq, "$g_formation_group2_selected", 1),
                    (team_set_order_listener, ":player_team", 2, 1),
                (else_try),
                    (eq, "$g_formation_group3_selected", 1),
                    (team_set_order_listener, ":player_team", 3, 1),
                (else_try),
                    (eq, "$g_formation_group4_selected", 1),
                    (team_set_order_listener, ":player_team", 4, 1),
                (else_try),
                    (eq, "$g_formation_group5_selected", 1),
                    (team_set_order_listener, ":player_team", 5, 1),
                (else_try),
                    (eq, "$g_formation_group6_selected", 1),
                    (team_set_order_listener, ":player_team", 6, 1),
                (else_try),
                    (eq, "$g_formation_group7_selected", 1),
                    (team_set_order_listener, ":player_team", 7, 1),
                (else_try),
                    (eq, "$g_formation_group8_selected", 1),
                    (team_set_order_listener, ":player_team", 8, 1),
                (try_end),
            (try_end),
        ]),

        (ti_on_presentation_mouse_enter_leave, [
            (store_trigger_param_1, ":object"),
            (store_trigger_param_2, ":enter_leave"),
            mouse_hover_group_buttons(),
        ]),

        (ti_on_presentation_run, [
            (store_trigger_param_1, ":cur_time"),
            (try_begin),
                (this_or_next|game_key_clicked, gk_group0_hear),
                (this_or_next|game_key_clicked, gk_group1_hear),
                (this_or_next|game_key_clicked, gk_group2_hear),
                (this_or_next|game_key_clicked, gk_group3_hear),
                (this_or_next|game_key_clicked, gk_group4_hear),
                (this_or_next|game_key_clicked, gk_group5_hear),
                (this_or_next|game_key_clicked, gk_group6_hear),
                (this_or_next|game_key_clicked, gk_group7_hear),
                (this_or_next|game_key_clicked, gk_group8_hear),
                (this_or_next|game_key_clicked, gk_everyone_hear),
                (game_key_clicked, gk_reverse_order_group),
                (call_script, "script_update_order_panel_checked_classes"),
            (try_end),
            (try_begin),
                (this_or_next|game_key_clicked, gk_order_1),
                (this_or_next|game_key_clicked, gk_order_2),
                (this_or_next|game_key_clicked, gk_order_3),
                (this_or_next|game_key_clicked, gk_order_4),
                (this_or_next|game_key_clicked, gk_order_5),
                (game_key_clicked, gk_order_6),
                (get_player_agent_no, ":player_agent"),
                (agent_get_team, ":player_team", ":player_agent"),
                (call_script, "script_update_order_panel", ":player_team"),
            (try_end),
            (try_begin),
                (gt, ":cur_time", 200),
                (game_key_clicked, gk_view_orders),
                (try_for_agents, ":cur_agent"),
                    (agent_set_slot, ":cur_agent", "slot_agent_map_overlay_id", 0),
                (try_end),
                (presentation_set_duration, 0),
            (try_end),
        ]),
    ]),
]

scripts = [

    # Input: arg1 = leader_agent_no, arg2 = order
    ("team_give_order_from_order_panel", [
        (store_script_param_1, ":leader_agent_no"),
        (store_script_param_2, ":order"),
        give_orders(),
        (call_script, "script_player_order_formations", ":order"),
        (set_show_messages, 1),
    ]),

    ("update_order_panel", [
        (store_script_param_1, ":team_no"),
        (set_fixed_point_multiplier, 1000),
        update_order_panel(),
    ]),

    ("update_order_panel_checked_classes", [
        update_order_panel_checked_classes(),
    ]),

    # Input: arg1 = team_no, arg2 = class_no
    # Output: s1 = order_name
    ("store_movement_order_name_to_s1", [
        (store_script_param_1, ":team_no"),
        (store_script_param_2, ":class_no"),
        (team_get_movement_order, ":cur_order", ":team_no", ":class_no"),
        (try_begin),
            (eq, ":cur_order", mordr_hold),
            (str_store_string, s1, "@Holding"),
        (else_try),
            (eq, ":cur_order", mordr_follow),
            (str_store_string, s1, "@Following"),
        (else_try),
            (eq, ":cur_order", mordr_charge),
            (str_store_string, s1, "@Charging"),
        (else_try),
            (eq, ":cur_order", mordr_advance),
            (str_store_string, s1, "@Advancing"),
        (else_try),
            (eq, ":cur_order", mordr_fall_back),
            (str_store_string, s1, "@Falling Back"),
        (else_try),
            (eq, ":cur_order", mordr_stand_closer),
            (str_store_string, s1, "@Standing Closer"),
        (else_try),
            (eq, ":cur_order", mordr_spread_out),
            (str_store_string, s1, "@Spreading Out"),
        (else_try),
            (eq, ":cur_order", mordr_stand_ground),
            (str_store_string, s1, "@Standing"),
        (else_try),
            (str_store_string, s1, "@N/A"),
        (try_end),
    ]),

    # Input: arg1 = team_no, arg2 = class_no
    # Output: s1 = order_name
    ("store_riding_order_name_to_s1", [
        (store_script_param_1, ":team_no"),
        (store_script_param_2, ":class_no"),
        (team_get_riding_order, ":cur_order", ":team_no", ":class_no"),
        (try_begin),
            (eq, ":cur_order", rordr_free),
            (str_store_string, s1, "@Free"),
        (else_try),
            (eq, ":cur_order", rordr_mount),
            (str_store_string, s1, "@Mount"),
        (else_try),
            (eq, ":cur_order", rordr_dismount),
            (str_store_string, s1, "@Dismount"),
        (else_try),
            (str_store_string, s1, "@N/A"),
        (try_end),
    ]),

    # Input: arg1 = team_no, arg2 = class_no
    # Output: s1 = order_name
    ("store_weapon_usage_order_name_to_s1", [
        (store_script_param_1, ":team_no"),
        (store_script_param_2, ":class_no"),
        (team_get_weapon_usage_order, ":cur_order", ":team_no", ":class_no"),
        (team_get_hold_fire_order, ":cur_hold_fire", ":team_no", ":class_no"),
        (try_begin),
            (eq, ":cur_order", wordr_use_any_weapon),
            (eq, ":cur_hold_fire", aordr_fire_at_will),
            (str_store_string, s1, "@Any Weapon"),
        (else_try),
            (eq, ":cur_order", wordr_use_blunt_weapons),
            (eq, ":cur_hold_fire", aordr_fire_at_will),
            (str_store_string, s1, "@Blunt Weapons"),
        (else_try),
            (eq, ":cur_order", wordr_use_any_weapon),
            (eq, ":cur_hold_fire", aordr_hold_your_fire),
            (str_store_string, s1, "@Hold Fire"),
        (else_try),
            (eq, ":cur_order", wordr_use_blunt_weapons),
            (eq, ":cur_hold_fire", aordr_hold_your_fire),
            (str_store_string, s1, "@Blunt / Hold Fire"),
        (else_try),
            (str_store_string, s1, "@N/A"),
        (try_end),
    ]),

    ("update_order_panel_statistics_and_map", [
        (set_fixed_point_multiplier, 1000),

        (assign, ":num_us_ready_group0", 0),
        (assign, ":num_us_ready_group1", 0),
        (assign, ":num_us_ready_group2", 0),
        (assign, ":num_us_ready_group3", 0),
        (assign, ":num_us_ready_group4", 0),
        (assign, ":num_us_ready_group5", 0),
        (assign, ":num_us_ready_group6", 0),
        (assign, ":num_us_ready_group7", 0),
        (assign, ":num_us_ready_group8", 0),

        (assign, ":num_us_ready_men", 0),
        (assign, ":num_us_wounded_men", 0),
        (assign, ":num_us_routed_men", 0),
        (assign, ":num_us_dead_men", 0),
        (assign, ":num_allies_ready_men", 0),
        (assign, ":num_allies_wounded_men", 0),
        (assign, ":num_allies_routed_men", 0),
        (assign, ":num_allies_dead_men", 0),
        (assign, ":num_enemies_ready_men", 0),
        (assign, ":num_enemies_wounded_men", 0),
        (assign, ":num_enemies_routed_men", 0),
        (assign, ":num_enemies_dead_men", 0),

        (get_scene_boundaries, pos2, pos3),

        (try_for_agents,":cur_agent"),
            (agent_is_human, ":cur_agent"),
            (agent_get_division, ":agent_division", ":cur_agent"),
            (agent_get_party_id, ":agent_party", ":cur_agent"),
            (agent_get_slot, ":agent_overlay", ":cur_agent", "slot_agent_map_overlay_id"),
            (try_begin),
                (eq, ":agent_party", "p_main_party"),
                (try_begin),
                    (agent_is_alive, ":cur_agent"),
                    (call_script, "script_update_agent_position_on_map", ":cur_agent"),
                    (try_begin),
                        (eq, ":agent_division", 0),
                        (val_add, ":num_us_ready_group0", 1),
                        (eq, "$group0_has_troops", 1), #added to solve problem. test this.
                    (else_try),
                        (eq, ":agent_division", 1),
                        (val_add, ":num_us_ready_group1", 1),
                        (eq, "$group1_has_troops", 1), #added to solve problem.
                    (else_try),
                        (eq, ":agent_division", 2),
                        (val_add, ":num_us_ready_group2", 1),
                        (eq, "$group2_has_troops", 1), #added to solve problem.
                    (else_try),
                        (eq, ":agent_division", 3),
                        (val_add, ":num_us_ready_group3", 1),
                        (eq, "$group3_has_troops", 1), #added to solve problem.
                    (else_try),
                        (eq, ":agent_division", 4),
                        (val_add, ":num_us_ready_group4", 1),
                        (eq, "$group4_has_troops", 1), #added to solve problem.
                    (else_try),
                        (eq, ":agent_division", 5),
                        (val_add, ":num_us_ready_group5", 1),
                        (eq, "$group5_has_troops", 1), #added to solve problem.
                    (else_try),
                        (eq, ":agent_division", 6),
                        (val_add, ":num_us_ready_group6", 1),
                        (eq, "$group6_has_troops", 1), #added to solve problem.
                    (else_try),
                        (eq, ":agent_division", 7),
                        (val_add, ":num_us_ready_group7", 1),
                        (eq, "$group7_has_troops", 1), #added to solve problem.
                    (else_try),
                        (eq, ":agent_division", 8),
                        (val_add, ":num_us_ready_group8", 1),
                        (eq, "$group8_has_troops", 1), #added to solve problem.
                    (try_end),

                    (val_add, ":num_us_ready_men", 1),
                (else_try),
                    (overlay_set_alpha, ":agent_overlay", 0),
                    (agent_is_wounded, ":cur_agent"),
                    (val_add, ":num_us_wounded_men", 1),
                (else_try),
                    (agent_is_routed, ":cur_agent"),
                    (val_add, ":num_us_routed_men", 1),
                (else_try),
                    (val_add, ":num_us_dead_men", 1),
                (try_end),
            (else_try),
                (agent_is_ally, ":cur_agent"),
                (try_begin),
                    (agent_is_alive, ":cur_agent"),
                    (call_script, "script_update_agent_position_on_map", ":cur_agent"),
                    (val_add, ":num_allies_ready_men", 1),
                (else_try),
                    (overlay_set_alpha, ":agent_overlay", 0),
                    (agent_is_wounded, ":cur_agent"),
                    (val_add, ":num_allies_wounded_men", 1),
                (else_try),
                    (agent_is_routed, ":cur_agent"),
                    (val_add, ":num_allies_routed_men", 1),
                (else_try),
                    (val_add, ":num_allies_dead_men", 1),
                (try_end),
            (else_try),
                (try_begin),
                    (agent_is_alive, ":cur_agent"),
                    (call_script, "script_update_agent_position_on_map", ":cur_agent"),
                    (val_add, ":num_enemies_ready_men", 1),
                (else_try),
                    (overlay_set_alpha, ":agent_overlay", 0),
                    (agent_is_wounded, ":cur_agent"),
                    (val_add, ":num_enemies_wounded_men", 1),
                (else_try),
                    (agent_is_routed, ":cur_agent"),
                    (val_add, ":num_enemies_routed_men", 1),
                (else_try),
                    (val_add, ":num_enemies_dead_men", 1),
                (try_end),
            (try_end),
        (try_end),

        # update group button name with number of troops
        (assign, reg1, ":num_us_ready_group0"),
        (assign, reg2, ":num_us_ready_group1"),
        (assign, reg3, ":num_us_ready_group2"),
        (assign, reg4, ":num_us_ready_group3"),
        (assign, reg5, ":num_us_ready_group4"),
        (assign, reg6, ":num_us_ready_group5"),
        (assign, reg7, ":num_us_ready_group6"),
        (assign, reg8, ":num_us_ready_group7"),
        (assign, reg9, ":num_us_ready_group8"),

        (try_begin),
            (eq, "$group0_has_troops", 1),
            (str_store_class_name, s1, 0),
            (overlay_set_text, "$g_presentation_obj_battle_name0", "str_s1_reg1"),
        (try_end),
        (try_begin),
            (eq, "$group1_has_troops", 1),
            (str_store_class_name, s1, 1),
            (overlay_set_text, "$g_presentation_obj_battle_name1", "str_s1_reg2"),
        (try_end),
        (try_begin),
            (eq, "$group2_has_troops", 1),
            (str_store_class_name, s1, 2),
            (overlay_set_text, "$g_presentation_obj_battle_name2", "str_s1_reg3"),
        (try_end),
        (try_begin),
            (eq, "$group3_has_troops", 1),
            (str_store_class_name, s1, 3),
            (overlay_set_text, "$g_presentation_obj_battle_name3", "str_s1_reg4"),
        (try_end),
        (try_begin),
            (eq, "$group4_has_troops", 1),
            (str_store_class_name, s1, 4),
            (overlay_set_text, "$g_presentation_obj_battle_name4", "str_s1_reg5"),
        (try_end),
        (try_begin),
            (eq, "$group5_has_troops", 1),
            (str_store_class_name, s1, 5),
            (overlay_set_text, "$g_presentation_obj_battle_name5", "str_s1_reg6"),
        (try_end),
        (try_begin),
            (eq, "$group6_has_troops", 1),
            (str_store_class_name, s1, 6),
            (overlay_set_text, "$g_presentation_obj_battle_name6", "str_s1_reg7"),
        (try_end),
        (try_begin),
            (eq, "$group7_has_troops", 1),
            (str_store_class_name, s1, 7),
            (overlay_set_text, "$g_presentation_obj_battle_name7", "str_s1_reg8"),
        (try_end),
        (try_begin),
            (eq, "$group8_has_troops", 1),
            (str_store_class_name, s1, 8),
            (overlay_set_text, "$g_presentation_obj_battle_name8", "str_s1_reg9"),
        (try_end),

        (assign, reg10, ":num_us_ready_men"),
        (assign, reg11, ":num_us_wounded_men"),
        (assign, reg12, ":num_us_routed_men"),
        (assign, reg13, ":num_us_dead_men"),
        (assign, reg14, ":num_allies_ready_men"),
        (assign, reg15, ":num_allies_wounded_men"),
        (assign, reg16, ":num_allies_routed_men"),
        (assign, reg17, ":num_allies_dead_men"),
        (assign, reg18, ":num_enemies_ready_men"),
        (assign, reg19, ":num_enemies_wounded_men"),
        (assign, reg20, ":num_enemies_routed_men"),
        (assign, reg21, ":num_enemies_dead_men"),

        (overlay_set_text, "$g_battle_us_ready", "@{!}{reg10}"),
        (overlay_set_text, "$g_battle_us_wounded", "@{!}{reg11}"),
        (overlay_set_text, "$g_battle_us_routed", "@{!}{reg12}"),
        (overlay_set_text, "$g_battle_us_dead", "str_reg13"),
        (overlay_set_text, "$g_battle_allies_ready", "str_reg14"),
        (overlay_set_text, "$g_battle_allies_wounded", "str_reg15"),
        (overlay_set_text, "$g_battle_allies_routed", "str_reg16"),
        (overlay_set_text, "$g_battle_allies_dead", "str_reg17"),
        (overlay_set_text, "$g_battle_enemies_ready", "str_reg18"),
        (overlay_set_text, "$g_battle_enemies_wounded", "str_reg19"),
        (overlay_set_text, "$g_battle_enemies_routed", "str_reg20"),
        (overlay_set_text, "$g_battle_enemies_dead", "str_reg21"),

        # todo: make this code part of the initialization of the panel
        (assign, ":stat_position_x", 675),
        (assign, ":stat_position_y", 280),
        (val_add, ":stat_position_x", 70),
        (val_add, ":stat_position_y", 60),
        (position_set_x, pos1, ":stat_position_x"),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_battle_us_ready", pos1),
        (val_add, ":stat_position_x", 70),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_battle_us_wounded", pos1),
        (val_add, ":stat_position_x", 70),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_battle_us_routed", pos1),
        (val_add, ":stat_position_x", 70),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_battle_us_dead", pos1),
        (val_add, ":stat_position_x", -210),
        (val_add, ":stat_position_y", -30),
        (position_set_x, pos1, ":stat_position_x"),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_battle_allies_ready", pos1),
        (val_add, ":stat_position_x", 70),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_battle_allies_wounded", pos1),
        (val_add, ":stat_position_x", 70),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_battle_allies_routed", pos1),
        (val_add, ":stat_position_x", 70),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_battle_allies_dead", pos1),
        (val_add, ":stat_position_x", -210),
        (val_add, ":stat_position_y", -30),
        (position_set_x, pos1, ":stat_position_x"),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_battle_enemies_ready", pos1),
        (val_add, ":stat_position_x", 70),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_battle_enemies_wounded", pos1),
        (val_add, ":stat_position_x", 70),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_battle_enemies_routed", pos1),
        (val_add, ":stat_position_x", 70),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_battle_enemies_dead", pos1),

        (call_script, "script_update_order_flags_on_map"),
  ]),

  # Input: arg1 = agent_no, pos2 = map_size_pos
  # Output: none
  ("update_agent_position_on_map",
   [(store_script_param_1, ":agent_no"),
    (agent_get_slot, ":agent_overlay", ":agent_no", "slot_agent_map_overlay_id"),

    (get_player_agent_no, ":player_agent"),
    (try_begin),
      (le, ":agent_overlay", 0),
      (set_fixed_point_multiplier, 1000),
      (try_begin),
        (eq, ":agent_no", ":player_agent"),
        (create_mesh_overlay, reg1, "mesh_player_dot"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 500),
        (overlay_set_size, reg1, pos1),
      (else_try),
        (create_mesh_overlay, reg1, "mesh_white_dot"),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 200),
        (overlay_set_size, reg1, pos1),
      (try_end),
      (overlay_set_alpha, reg1, 0x88),
      (agent_set_slot, ":agent_no", "slot_agent_map_overlay_id", reg1),
      (assign, ":agent_overlay", reg1),
    (try_end),

    (try_begin),
      (neq, ":agent_no", ":player_agent"),
      (agent_get_party_id, ":agent_party", ":agent_no"),
      (try_begin),
        (eq, ":agent_party", "p_main_party"),
        (agent_get_division, ":agent_division", ":agent_no"),
        (try_begin),
          (eq, ":agent_division", 0),
          (overlay_set_color, ":agent_overlay", 0x8d5220),
        (else_try),
          (eq, ":agent_division", 1),
          (overlay_set_color, ":agent_overlay", 0x34c6e4),
        (else_try),
          (eq, ":agent_division", 2),
          (overlay_set_color, ":agent_overlay", 0x569619),
        (else_try),
          (eq, ":agent_division", 3),
          (overlay_set_color, ":agent_overlay", 0xFFE500),
        (else_try),
          (eq, ":agent_division", 4),
          (overlay_set_color, ":agent_overlay", 0x990099),
        (else_try),
          (eq, ":agent_division", 5),
          (overlay_set_color, ":agent_overlay", 0x99FE80),
        (else_try),
          (eq, ":agent_division", 6),
          (overlay_set_color, ":agent_overlay", 0x9DEFFE),
        (else_try),
          (eq, ":agent_division", 7),
          (overlay_set_color, ":agent_overlay", 0xFECB9D),
        (else_try),
          (eq, ":agent_division", 8),
          (overlay_set_color, ":agent_overlay", 0xB19C9C),
        (try_end),
      (else_try),
        (agent_is_ally, ":agent_no"),
        (overlay_set_color, ":agent_overlay", 0x5555FF),
      (else_try),
        (overlay_set_color, ":agent_overlay", 0xFF0000),
      (try_end),
    (try_end),

    (try_begin),
      (eq, ":agent_no", ":player_agent"),
      (agent_get_look_position, pos1, ":agent_no"),
      (position_get_rotation_around_z, ":rot", pos1),
      (init_position, pos10),
      (position_rotate_z, pos10, ":rot"),
      (overlay_set_mesh_rotation, ":agent_overlay", pos10),
      (call_script, "script_convert_3d_pos_to_map_pos"),
    (else_try),
      (agent_get_position, pos1, ":agent_no"),
      (call_script, "script_convert_3d_pos_to_map_pos"),
    (try_end),
    (overlay_set_position, ":agent_overlay", pos0),
  ]),

  # Input: pos1 = 3d_pos, pos2 = map_size_pos
  # Output: pos0 = map_pos
  ("convert_3d_pos_to_map_pos",
   [(set_fixed_point_multiplier, 1000),
    (position_transform_position_to_local, pos3, pos2, pos1),
    (position_get_x, ":agent_x_pos", pos3),
    (position_get_y, ":agent_y_pos", pos3),
    (val_div, ":agent_x_pos", "$g_battle_map_scale"),
    (val_div, ":agent_y_pos", "$g_battle_map_scale"),
    (set_fixed_point_multiplier, 1000),
    (store_sub, ":map_x", 980, "$g_battle_map_width"),
    (store_sub, ":map_y", 730, "$g_battle_map_height"),
    (val_add, ":agent_x_pos", ":map_x"),
    (val_add, ":agent_y_pos", ":map_y"),
    (position_set_x, pos0, ":agent_x_pos"),
    (position_set_y, pos0, ":agent_y_pos"),
  ]),

  ("update_order_flags_on_map",
   [(set_fixed_point_multiplier, 1000),
    (get_player_agent_no, ":player_agent"),
    (agent_get_team, ":player_team", ":player_agent"),

    (get_scene_boundaries, pos2, pos3),

    (team_get_movement_order, ":cur_order", ":player_team", grc_infantry),
    (try_begin),
      (eq, ":cur_order", mordr_hold),
      (team_get_order_position, pos1, ":player_team", grc_infantry),
      (call_script, "script_convert_3d_pos_to_map_pos"),
      (overlay_set_alpha, "$g_battle_map_infantry_order_flag", 0xFF),
      (overlay_set_position, "$g_battle_map_infantry_order_flag", pos0),
    (else_try),
      (overlay_set_alpha, "$g_battle_map_infantry_order_flag", 0),
    (try_end),
    (team_get_movement_order, ":cur_order", ":player_team", grc_archers),
    (try_begin),
      (eq, ":cur_order", mordr_hold),
      (team_get_order_position, pos1, ":player_team", grc_archers),
      (call_script, "script_convert_3d_pos_to_map_pos"),
      (overlay_set_alpha, "$g_battle_map_archers_order_flag", 0xFF),
      (overlay_set_position, "$g_battle_map_archers_order_flag", pos0),
    (else_try),
      (overlay_set_alpha, "$g_battle_map_archers_order_flag", 0),
    (try_end),
    (team_get_movement_order, ":cur_order", ":player_team", grc_cavalry),
    (try_begin),
      (eq, ":cur_order", mordr_hold),
      (team_get_order_position, pos1, ":player_team", grc_cavalry),
      (call_script, "script_convert_3d_pos_to_map_pos"),
      (overlay_set_alpha, "$g_battle_map_cavalry_order_flag", 0xFF),
      (overlay_set_position, "$g_battle_map_cavalry_order_flag", pos0),
    (else_try),
      (overlay_set_alpha, "$g_battle_map_cavalry_order_flag", 0),
    (try_end),
  ]),
]
